cabal-version: 1.12

-- This file has been generated from package.yaml by hpack version 0.35.1.
--
-- see: https://github.com/sol/hpack
--
-- hash: 52e1e8acfe9cc66925dc7fa1ceb67e6245ff39862559f252abbc5b7e944ca414

name:           tonaparser
version:        0.2.0.0
synopsis:       Scalable way to pass runtime configurations for tonatona
description:    Tonaparser provides a way to pass runtime configurations. This library is supposed to be used with @tonatona@.
category:       Library, System, Tonatona
homepage:       https://github.com/tonatona-project/tonatona#readme
bug-reports:    https://github.com/tonatona-project/tonatona/issues
author:         Kadzuya Okamoto, Dennis Gosnell
maintainer:     arow.okamoto+github@gmail.com
copyright:      2018 Kadzuya Okamoto
license:        MIT
license-file:   LICENSE
build-type:     Simple
tested-with:
    GHC==9.4.6, GHC==9.2.8, GHC==9.0.2, GHC==8.10.7
extra-source-files:
    README.md

source-repository head
  type: git
  location: https://github.com/tonatona-project/tonatona

flag buildexample
  description: Build a small example program
  manual: False
  default: False

library
  exposed-modules:
      TonaParser
  other-modules:
      Paths_tonaparser
  hs-source-dirs:
      src
  default-extensions:
      BangPatterns
      BinaryLiterals
      ConstraintKinds
      DataKinds
      DefaultSignatures
      DeriveDataTypeable
      DeriveFoldable
      DeriveFunctor
      DeriveGeneric
      DeriveTraversable
      DoAndIfThenElse
      EmptyDataDecls
      ExistentialQuantification
      FlexibleContexts
      FlexibleInstances
      FunctionalDependencies
      GADTs
      GeneralizedNewtypeDeriving
      InstanceSigs
      KindSignatures
      LambdaCase
      MultiParamTypeClasses
      MultiWayIf
      NamedFieldPuns
      NoImplicitPrelude
      OverloadedStrings
      PartialTypeSignatures
      PatternGuards
      PolyKinds
      RankNTypes
      RecordWildCards
      ScopedTypeVariables
      StandaloneDeriving
      TupleSections
      TypeFamilies
      TypeSynonymInstances
      ViewPatterns
  ghc-options: -Wcompat -Wincomplete-record-updates -Wincomplete-uni-patterns -Wredundant-constraints
  build-depends:
      base >=4.14 && <4.18
    , envy ==2.1.*
    , rio ==0.1.*
    , say ==0.1.*
  default-language: Haskell2010

executable tonaparser-example
  main-is: Main.hs
  other-modules:
      Paths_tonaparser
  hs-source-dirs:
      example
  default-extensions:
      BangPatterns
      BinaryLiterals
      ConstraintKinds
      DataKinds
      DefaultSignatures
      DeriveDataTypeable
      DeriveFoldable
      DeriveFunctor
      DeriveGeneric
      DeriveTraversable
      DoAndIfThenElse
      EmptyDataDecls
      ExistentialQuantification
      FlexibleContexts
      FlexibleInstances
      FunctionalDependencies
      GADTs
      GeneralizedNewtypeDeriving
      InstanceSigs
      KindSignatures
      LambdaCase
      MultiParamTypeClasses
      MultiWayIf
      NamedFieldPuns
      NoImplicitPrelude
      OverloadedStrings
      PartialTypeSignatures
      PatternGuards
      PolyKinds
      RankNTypes
      RecordWildCards
      ScopedTypeVariables
      StandaloneDeriving
      TupleSections
      TypeFamilies
      TypeSynonymInstances
      ViewPatterns
  ghc-options: -Wcompat -Wincomplete-record-updates -Wincomplete-uni-patterns -Wredundant-constraints
  build-depends:
      base >=4.14 && <4.18
    , envy ==2.1.*
    , rio ==0.1.*
    , say
    , tonaparser
  default-language: Haskell2010
  if flag(buildexample)
    buildable: True
  else
    buildable: False

test-suite doctest
  type: exitcode-stdio-1.0
  main-is: DocTest.hs
  hs-source-dirs:
      test
  default-extensions:
      BangPatterns
      BinaryLiterals
      ConstraintKinds
      DataKinds
      DefaultSignatures
      DeriveDataTypeable
      DeriveFoldable
      DeriveFunctor
      DeriveGeneric
      DeriveTraversable
      DoAndIfThenElse
      EmptyDataDecls
      ExistentialQuantification
      FlexibleContexts
      FlexibleInstances
      FunctionalDependencies
      GADTs
      GeneralizedNewtypeDeriving
      InstanceSigs
      KindSignatures
      LambdaCase
      MultiParamTypeClasses
      MultiWayIf
      NamedFieldPuns
      NoImplicitPrelude
      OverloadedStrings
      PartialTypeSignatures
      PatternGuards
      PolyKinds
      RankNTypes
      RecordWildCards
      ScopedTypeVariables
      StandaloneDeriving
      TupleSections
      TypeFamilies
      TypeSynonymInstances
      ViewPatterns
  ghc-options: -Wcompat -Wincomplete-record-updates -Wincomplete-uni-patterns -Wredundant-constraints
  build-depends:
      Glob
    , base >=4.14 && <4.18
    , doctest
    , envy ==2.1.*
    , rio ==0.1.*
    , say ==0.1.*
  default-language: Haskell2010

test-suite spec
  type: exitcode-stdio-1.0
  main-is: Spec.hs
  hs-source-dirs:
      test
  default-extensions:
      BangPatterns
      BinaryLiterals
      ConstraintKinds
      DataKinds
      DefaultSignatures
      DeriveDataTypeable
      DeriveFoldable
      DeriveFunctor
      DeriveGeneric
      DeriveTraversable
      DoAndIfThenElse
      EmptyDataDecls
      ExistentialQuantification
      FlexibleContexts
      FlexibleInstances
      FunctionalDependencies
      GADTs
      GeneralizedNewtypeDeriving
      InstanceSigs
      KindSignatures
      LambdaCase
      MultiParamTypeClasses
      MultiWayIf
      NamedFieldPuns
      NoImplicitPrelude
      OverloadedStrings
      PartialTypeSignatures
      PatternGuards
      PolyKinds
      RankNTypes
      RecordWildCards
      ScopedTypeVariables
      StandaloneDeriving
      TupleSections
      TypeFamilies
      TypeSynonymInstances
      ViewPatterns
  ghc-options: -Wcompat -Wincomplete-record-updates -Wincomplete-uni-patterns -Wredundant-constraints
  build-depends:
      base >=4.14 && <4.18
    , envy ==2.1.*
    , rio ==0.1.*
    , say ==0.1.*
    , tonaparser
  default-language: Haskell2010
